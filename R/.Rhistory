suma5 <- function(n)
{}
View(suma5)
foo <- function(n)
{
return(5^n)
}
foo(2)
jesimo.dato <- function(x,j)
{
x_orden <- sort(x,decreasing = FALSE)
jesimo <- x_orden[j]
return(jesimo)
}
x <- c(12,8,9,7,14, 21)
jesimo.dato(x, 4)
media.truncada <- function(x,alpha)
{
vr<- c()
q1<-quantile(x,alpha/2)
q2<-quantile(x,(1-alpha/2))
#iterar por todo el vector y crear un nuevo vector con los vectores que cumplan
for (v in x)
{
if(q1<v & v<q2 )
{
vr <- c(vr,v)
}
}
n_alpha <- length(vr)
mtrunc <- (1/n_alpha)*(sum(vr))
}
#2 FunciÃ³n que devuelve la media de los datos entre el cuantil 1 y 1-alpha
media.truncada <- function(x,alpha)
{
vr<- c()
q1<-quantile(x,alpha/2)
q2<-quantile(x,(1-alpha/2))
#iterar por todo el vector y crear un nuevo vector con los vectores que cumplan
for (v in x)
{
if(q1<=v & v<=q2 )
{
vr <- c(vr,v)
}
}
n_alpha <- length(vr)
mtrunc <- (1/n_alpha)*(sum(vr))
}
#2 FunciÃ³n que devuelve la media de los datos entre el cuantil 1 y 1-alpha
media.truncada <- function(x,alpha)
{
vr<- c()
q1<-quantile(x,alpha/2)
q2<-quantile(x,(1-alpha/2))
#iterar por todo el vector y crear un nuevo vector con los vectores que cumplan
for (v in x)
{
if(q1<=v & v<=q2 )
{
vr <- c(vr,v)
}
}
n_alpha <- length(vr)
mtrunc <- (1/n_alpha)*(sum(vr))
}
?trimmed.mean
